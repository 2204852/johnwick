# Global

variables:
    PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"

cache:
  key: "${CI_JOB_NAME}"
  paths:
    - .cache/pip
    - .venv

stages:
  - quality
  - tests
  - deploy

# Jobs templates

.install-deps-template: &install-deps
  before_script:
    - apt-get update
    - apt-get install -y aria2
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - poetry install -vv -E tui
    - poetry --version
    - aria2c --version

.quality-template: &quality
  <<: *install-deps
  image: python:3.6
  stage: quality

.test-template: &test
  <<: *install-deps
  stage: tests
  coverage: '/TOTAL.*\s(\d+\.\d+\%)/'
  script: make test
  artifacts:
    paths:
      - tests/logs
    when: on_failure
    expire_in: 1 week

.deploy-template: &deploy
  <<: *install-deps
  image: python:3.6
  stage: deploy
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - chmod 400 "$GITHUB_DEPLOY_KEY"
    - ssh-add "$GITHUB_DEPLOY_KEY"
    - git config --global user.email "pawamoy@pm.me"
    - git config --global user.name "GitLab CI"

# Quality jobs

check-bandit:
  <<: *quality
  script: make check-bandit

check-black:
  <<: *quality
  script: make check-black

check-docs:
  <<: *quality
  script: make docs

check-flake8:
  <<: *quality
  script: make check-flake8

check-isort:
  <<: *quality
  script: make check-isort

check-mypy:
  <<: *quality
  script: make check-mypy
  allow_failure: true

check-safety:
  <<: *quality
  script: make check-safety

# Tests jobs

python3.6:
  <<: *test
  image: python:3.6

python3.7:
  <<: *test
  image: python:3.7

python3.8:
  <<: *test
  image: python:3.8

# Deploy jobs

deploy-docs:
  <<: *deploy
  script: make docs-deploy
